#include "all_ops.h"
#include <fstream>

int main(int argc, char** argv) {
  if (argc != 2) {
    std::cerr << "Usage: " << argv[0] << " <output_dir>" << kEnd;
    return 1;
  }
  std::fstream file;
  file.open(argv[1], std::ios::out);

  Code code;
  std::stringstream ss;
  size_t unsupported = 0U;
  for (auto& def : OpDef::defs) {
    if (!def.Err().empty()) {
      unsupported++;
      ss << "# IR " << def.op << " skipped as " << def.Err() << kEnd;
      continue;
    }
    def.Gen(code);
  }
  file << "# This file is auto-generated by 'all_ops.h'" << kEnd;
  file << "# Summary: total " << OpDef::defs.size() << ", generated " << (OpDef::defs.size() - unsupported)
       << ", skipped " << unsupported << kEnd;

  file << "from typing import Any, Dict, List, Tuple, Union, Callable, Optional" << kEnd;
  file << "from torchair.ge_concrete_graph.ge_ir_pb2 import GraphDef, OpDef, TensorDescriptor, TensorDef" << kEnd;
  file << "from torchair.ge_concrete_graph.ge_graph import get_default_ge_graph, next_unique_name" << kEnd;
  file << "from torchair.ge_concrete_graph.ge_graph import auto_convert_to_tensor" << kEnd;
  file << "from torchair.ge_concrete_graph.ge_graph import Tensor, TensorSpec, DataType, TensorType" << kEnd;
  file << "from torchair.ge_concrete_graph.ge_graph import compat_as_bytes, compat_as_bytes_list" << kEnd;
  file << "from torchair.ge_concrete_graph.ge_graph import trans_to_list_list_int, trans_to_list_list_float" << kEnd;
  file << "from torchair.ge_concrete_graph.ge_graph import get_invalid_desc" << kEnd;
  file << ss.str() << kEnd;
  file << code.str() << kEnd;

  file.close();
}